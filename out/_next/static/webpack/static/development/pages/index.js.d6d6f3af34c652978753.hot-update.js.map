{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d6d6f3af34c652978753.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Router from 'next/router';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Msg from '../components/Msg';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'fixed',\r\n        top: '40%',\r\n        transform: 'translateY(-50%)',\r\n    },\r\n}));\r\n\r\nexport default function Index() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [values, setValues] = React.useState({\r\n        usr: '',\r\n        psd: '',\r\n    });\r\n    const classes = useStyles();\r\n\r\n    function handleClose(event, reason) {\r\n        setOpen(false);\r\n    }\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n    async function handleLogin() {\r\n        if (!values.usr || !values.psd) {\r\n            setOpen(true);\r\n        } else {\r\n            // 发起请求\r\n            const res = await fetch('http://localhost:8080/api/validUser', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    usr: values.usr,\r\n                    psd: values.psd,\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json; charset=UTF-8',\r\n                },\r\n            });\r\n            const data = await res.json();\r\n            if (data.errorCode) {\r\n                setOpen(true);\r\n            } else {\r\n                Router.push('/home');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.root} spacing={2}>\r\n                <Grid container justify='center'>\r\n                    <Typography variant='h4' component='h1'>\r\n                        72 Kr 管理平台\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='email-input'\r\n                            fullWidth\r\n                            label='账户'\r\n                            type='text'\r\n                            name='text'\r\n                            onChange={handleChange('usr')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='password-input'\r\n                            label='密码'\r\n                            fullWidth\r\n                            type='password'\r\n                            name='password'\r\n                            onChange={handleChange('psd')}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Box mt={2}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleLogin}\r\n                        >\r\n                            登录\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={1000}\r\n                onClose={handleClose}\r\n            >\r\n                <Msg\r\n                    onClose={handleClose}\r\n                    variant='warning'\r\n                    message='用户名或密码错误!'\r\n                />\r\n            </Snackbar>\r\n            <style global jsx>{`\r\n                body {\r\n                    background-image: radial-gradient(\r\n                            #d7d7d7 1px,\r\n                            transparent 1px\r\n                        ),\r\n                        radial-gradient(#d7d7d7 1px, transparent 1px);\r\n                    background-position: 0 0, 25px 25px;\r\n                    background-size: 50px 50px;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n}\r\n\r\nIndex.getInitialProps = async () => {\r\n    let pageProps = { title: '72 Kr | 请登录', layout: 0 ,};\r\n    return pageProps;\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AACA;AANA;AAKA;AALA;AAAA;AACA;AADA;AAeA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAAA;AACA;AAsCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1DA;AAAA;AAAA;AA6EA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}