{"version":3,"file":"static/webpack/static\\development\\pages\\category.js.8453a32214f37cd647fe.hot-update.js","sources":["webpack:///./pages/category.js"],"sourcesContent":["\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Msg from '../components/Msg';\r\nimport moment from 'moment';\r\nmoment.locale('zh-CN');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(3),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nexport default function Category({ categories }) {\r\n    const [type, setType] = React.useState('info');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [msg, setMsg] = React.useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n    async function handleDelete(categories, id) {\r\n        const res = await fetch(`http://localhost:8080/api/category?id=${id}`, {\r\n            method: 'DELETE',\r\n        });\r\n        const text = await res.text();\r\n        let data = text ? JSON.parse(text) : {};\r\n        if (data.errorCode) {\r\n            setType('error');\r\n            setMsg(data.msg);\r\n            setOpen(true);\r\n        } else {\r\n            let rIndex = categories.findIndex(category => category._id === id);\r\n            categories.splice(rIndex, 1);\r\n            setType('success');\r\n            setMsg('删除类目成功！');\r\n            setOpen(true);\r\n        }\r\n    }\r\n    return (\r\n        <div title='类目管理'>\r\n            <Paper className={classes.root}>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>类目 ID</TableCell>\r\n                            <TableCell align='left'>类目名称</TableCell>\r\n                            <TableCell align='left'>类目权重</TableCell>\r\n                            <TableCell align='left'>创建时间</TableCell>\r\n                            <TableCell align='left'>修改时间</TableCell>\r\n                            <TableCell align='left'>操作</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {categories.map(category => (\r\n                            <TableRow key={category._id}>\r\n                                <TableCell component='th' scope='row'>\r\n                                    {category._id}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    {category.name}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    {category.weight}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    {moment(category.createTime).format('lll')}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    {moment(category.createTime).format('lll')}\r\n                                </TableCell>\r\n                                <TableCell align='left'>\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        color='primary'\r\n                                        onClick={() =>\r\n                                            handleDelete(\r\n                                                categories,\r\n                                                category._id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        删除\r\n                                    </Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={1000}\r\n                onClose={handleClose}\r\n            >\r\n                <Msg onClose={handleClose} variant={type} message={msg} />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nCategory.getInitialProps = async ({ req }) => {\r\n    const res = await fetch('http://localhost:8080/api/categories');\r\n    const json = await res.json();\r\n    return { categories: json.data };\r\n    return {\r\n        shellTitle: '首页',\r\n        pageTitle: '72 Kr | 首页',\r\n        layout: 1,\r\n    };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AANA;AAAA;AAWA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AACA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAjlBA;AAqCA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}