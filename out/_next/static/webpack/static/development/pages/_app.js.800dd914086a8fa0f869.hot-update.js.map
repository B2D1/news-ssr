{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.800dd914086a8fa0f869.hot-update.js","sources":["webpack:///./layouts/main.js"],"sourcesContent":["import Router from 'next/router';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport IconPerson from '@material-ui/icons/Person';\r\nimport List from '@material-ui/core/List';\r\nimport IconViewModule from '@material-ui/icons/ViewModule';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        margin: 10,\r\n    },\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport default function MainLayout(props) {\r\n    const { container, children, title } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n    const [auth, setAuth] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    function handleMenu(event) {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    function handleClose() {\r\n        setAnchorEl(null);\r\n    }\r\n    const drawer = (\r\n        <React.Fragment>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                <ListItem\r\n                    button\r\n                    key='首页'\r\n                    onClick={() => Router.push('/home')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <HomeIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='首页' />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem\r\n                    button\r\n                    key='用户管理'\r\n                    onClick={() => Router.push('/user')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <IconPerson />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='用户管理' />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem\r\n                    button\r\n                    key='新闻管理'\r\n                    onClick={() => Router.push('/news')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <FiberNewIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='新闻管理' />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    key='addNews'\r\n                    onClick={() => Router.push('/addNews')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <IconViewModule />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='新增新闻' />\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem\r\n                    button\r\n                    key='category'\r\n                    onClick={() => Router.push('/category')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <IconViewModule />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='类目管理' />\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    key='addCategory'\r\n                    onClick={() => Router.push('/addCategory')}\r\n                >\r\n                    <ListItemIcon>\r\n                        <IconViewModule />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary='新增类目' />\r\n                </ListItem>\r\n            </List>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position='fixed' className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color='inherit'\r\n                        aria-label='open drawer'\r\n                        edge='start'\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography\r\n                        variant='h6'\r\n                        component='h1'\r\n                        className={classes.title}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    {auth && (\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label='account of current user'\r\n                                aria-controls='menu-appbar'\r\n                                aria-haspopup='true'\r\n                                onClick={handleMenu}\r\n                                color='inherit'\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id='menu-appbar'\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={open}\r\n                                onClose={handleClose}\r\n                            >\r\n                                <MenuItem\r\n                                    onClick={handleClose}\r\n                                    onClick={() => Router.push('/')}\r\n                                >\r\n                                    退出\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label='mailbox folders'>\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation='css'>\r\n                    <Drawer\r\n                        container={container}\r\n                        variant='temporary'\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation='css'>\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant='permanent'\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {children}\r\n            </main>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={1000}\r\n                onClose={handleClose}\r\n            >\r\n                <Msg onClose={handleClose} variant={type} message={msg} />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAhCA;AAAA;AAsbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AADA;AAEA;AAAA;AAFA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}