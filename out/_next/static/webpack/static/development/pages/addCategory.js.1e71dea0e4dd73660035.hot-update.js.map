{"version":3,"file":"static/webpack/static\\development\\pages\\addCategory.js.1e71dea0e4dd73660035.hot-update.js","sources":["webpack:///./pages/addCategory.js"],"sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Msg from '../components/Msg';\r\n\r\nexport default function AddCategory() {\r\n    const [type, setType] = React.useState('info');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [msg, setMsg] = React.useState('');\r\n    const [name, setName] = React.useState('');\r\n    const [weight, setWeight] = React.useState('');\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n    function handleNameChange(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n    function handleWeightChange(evt) {\r\n        setWeight(evt.target.value);\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        if (!name || !weight) {\r\n            setType('warning');\r\n            setMsg('字段不能为空！');\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        const res = await fetch('http://localhost:8080/api/category', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                name,\r\n                weight,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n            },\r\n        });\r\n        const json = await res.json();\r\n        if (json.errorCode) {\r\n            setType('error');\r\n            setMsg(json.msg);\r\n            setOpen(true);\r\n        } else {\r\n            setType('success');\r\n            setMsg('新增类目成功！');\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div title='新增类目'>\r\n            <Grid container spacing={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='name'\r\n                            fullWidth\r\n                            label='类目名称'\r\n                            type='text'\r\n                            name='name'\r\n                            onChange={handleNameChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='weight'\r\n                            label='类目权重'\r\n                            fullWidth\r\n                            type='number'\r\n                            name='weight'\r\n                            onChange={handleWeightChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Box mt={2}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            提交\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={1000}\r\n                onClose={handleClose}\r\n            >\r\n                <Msg onClose={handleClose} variant={type} message={msg} />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddCategory.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:8080/api/categories');\r\n    const json = await res.json();\r\n    return {\r\n        shellTitle: '新增新闻',\r\n        pageTitle: '72 Kr | 新增新闻',\r\n        layout: 1,\r\n        categories: json.data,\r\n    };\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAhBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AACA;AADA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AANA;AACA;AARA;AAOA;AAPA;AAAA;AACA;AADA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AACA;AA6CA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}