{"version":3,"file":"static/webpack/static\\development\\pages\\addNews.js.d2116e34b8364e7d8c57.hot-update.js","sources":["webpack:///./pages/addNews.js"],"sourcesContent":["import Grid from '@material-ui/core/Grid';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Msg from '../components/Msg';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nexport default function AddNews({ categories }) {\r\n    const [type, setType] = React.useState('info');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [msg, setMsg] = React.useState('');\r\n    const [title, setTitle] = React.useState();\r\n    const [author, setAuthor] = React.useState('');\r\n    const [cover, setCover] = React.useState('');\r\n    const [content, setContent] = React.useState('');\r\n    const [category, setCategory] = React.useState('');\r\n\r\n    const classes = useStyles();\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n    function handleTitleChange(evt) {\r\n        setTitle(evt.target.value);\r\n    }\r\n    function handleAuthorChange(evt) {\r\n        setAuthor(evt.target.value);\r\n    }\r\n    async function handleCoverChange(evt) {\r\n        const file = document.getElementById('cover').files[0];\r\n        const formData = new FormData();\r\n        formData.append('cover', file, file.name);\r\n        const res = await fetch('http://localhost:8080/api/uploadImg', {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n        const json = await res.json();\r\n        if (json.errorCode) {\r\n            setType('error');\r\n            setMsg(json.msg);\r\n            setOpen(true);\r\n        } else {\r\n            setCover(json.data.filename);\r\n        }\r\n    }\r\n    function handleContentChange(evt) {\r\n        setContent(evt.target.value);\r\n    }\r\n    function handleCategoryChange(evt) {\r\n        setCategory(evt.target.value);\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        if (!title || !author || !cover || !content || !category) {\r\n            setType('warning');\r\n            setMsg('字段不能为空！');\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        const res = await fetch('http://localhost:8080/api/news', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title,\r\n                author,\r\n                cover,\r\n                content,\r\n                category,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=UTF-8',\r\n            },\r\n        });\r\n        const json = await res.json();\r\n        if (json.errorCode) {\r\n            setType('error');\r\n            setMsg(json.msg);\r\n            setOpen(true);\r\n        } else {\r\n            setType('success');\r\n            setMsg('新增新闻成功！');\r\n            setOpen(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div title='新增新闻'>\r\n            <Grid container spacing={2}>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='title'\r\n                            fullWidth\r\n                            label='新闻标题'\r\n                            type='text'\r\n                            name='title'\r\n                            onChange={handleTitleChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            id='standard-select-currency'\r\n                            select\r\n                            required\r\n                            fullWidth\r\n                            value={category}\r\n                            label='新闻类目'\r\n                            onChange={handleCategoryChange}\r\n                            SelectProps={{\r\n                                MenuProps: {\r\n                                    className: classes.menu,\r\n                                },\r\n                            }}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        >\r\n                            {categories.map(option => (\r\n                                <MenuItem key={option._id} value={option._id}>\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='author'\r\n                            label='新闻作者'\r\n                            fullWidth\r\n                            type='text'\r\n                            name='author'\r\n                            onChange={handleAuthorChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='cover'\r\n                            fullWidth\r\n                            type='file'\r\n                            name='cover'\r\n                            onChange={handleCoverChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Grid item sm={5}>\r\n                        <TextField\r\n                            required\r\n                            id='content'\r\n                            label='新闻内容'\r\n                            fullWidth\r\n                            type='text'\r\n                            name='content'\r\n                            onChange={handleContentChange}\r\n                            margin='normal'\r\n                            variant='outlined'\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify='center'>\r\n                    <Box mt={2}>\r\n                        <Button\r\n                            variant='contained'\r\n                            color='primary'\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            提交\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={1000}\r\n                onClose={handleClose}\r\n            >\r\n                <Msg onClose={handleClose} variant={type} message={msg} />\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddNews.getInitialProps = async () => {\r\n    const res = await fetch('http://localhost:8080/api/categories');\r\n    const json = await res.json();\r\n    return {\r\n        shellTitle: '管理',\r\n        pageTitle: '72 Kr | 新闻管理',\r\n        layout: 1,\r\n        categories: json.data\r\n    };\r\n};\r\n"],"mappings":"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","sourceRoot":""}